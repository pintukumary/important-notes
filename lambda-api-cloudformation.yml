1. Create S3 Bucket.

TIMESTAMP=$(date +%Y%m%d%H%M%S)
zip -r myfunction-${TIMESTAMP}.zip .
 
# Upload to S3
aws s3 cp myfunction-${TIMESTAMP}.zip s3://boxlty2-user-management-dev/lambda-code/



Cloudformation template.yml

AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  CodeVersion:
    Type: String
    Default: "20250724111326"
    Description: Timestamp version of the code
  S3Bucket:
    Type: String
    Default: "boxlty2-user-management-dev"
    Description: S3 bucket containing Lambda code
  Environment:
    Type: String
    Default: "dev"
    Description: Environment name (e.g., dev, uat, prod)

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "boxlty2-user-management-${Environment}-${CodeVersion}"
      Runtime: nodejs20.x
      Handler: lambda.universal
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Sub "lambda-code/myfunction-${CodeVersion}.zip"
      MemorySize: 1024
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - sg-0d1f9e5fd9abdae62
        SubnetIds:
          - subnet-0c4314720eb512608
          - subnet-0c6b4f5c2cf5cc6c9

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "boxlty2-user-management-${Environment}-api"
      EndpointConfiguration:
        Types:
          - REGIONAL
      BinaryMediaTypes:
        - image/png
        - image/jpg
        - image/jpeg
        - '*/*'

  ApiGatewayRootResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: '{proxy+}'

  ApiGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !GetAtt ApiGateway.RootResourceId
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - LambdaArn: !GetAtt LambdaFunction.Arn

  ApiGatewayProxyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiGatewayRootResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - LambdaArn: !GetAtt LambdaFunction.Arn

  LambdaApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/ANY/*"

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGatewayRootMethod
      - ApiGatewayProxyMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: dev

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/dev"
  LambdaFunctionArn:
    Description: ARN of the Lambda function
    Value: !GetAtt LambdaFunction.Arn




aws cloudformation deploy \
  --template-file template.yml \
  --stack-name boxlty2-user-management-dev-stack \
  --region us-east-1 \
  --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
  --parameter-overrides CodeVersion=$TIMESTAMP S3Bucket=boxlty2-user-management-dev Environment=dev

